<?xml version="1.0" encoding="ISO-8859-1" ?>
<rule_miner xml:space="preserve">
	<logfile>src/main/config/DefaultLog4j.properties</logfile>
	<naive>
	    <!-- specify here runtime parameters of the rule generation algorithms -->
		<runtime>
			<num_threads>1</num_threads>
			<!-- min number of negative examples to support a rule to be in output -->
			<threshold>0</threshold>
			<!-- max number of atoms in the output rule -->
			<max_rule_lenght>3</max_rule_lenght>
		</runtime>
		<!-- sparql engine endpoint specific parameters -->
		<sparql>
<!-- 			<class>asu.edu.neg_rule_miner.sparql.rdf3x.QueryRDF3XStore</class> -->
<!-- 			<parameters> -->
<!-- 				<db_location>/home/stefano/Downloads/Dataset/RDF3x_dataset/DBPedia/dbpedia</db_location> -->
<!-- 				<executable>/home/stefano/Downloads/rdf3x-0.3.7/bin/rdf3xquery</executable> -->
<!-- 			</parameters> -->
			<class>asu.edu.neg_rule_miner.sparql.jena.remote.QuerySparqlRemoteEndpoint</class>
			<parameters>
				<sparql_endpoint>http://localhost:8890/sparql</sparql_endpoint>
			</parameters>
<!-- 			<class>asu.edu.neg_rule_miner.sparql.jena.tbd.QueryJenaRDFAPI</class> -->
<!-- 			<parameters> -->
<!-- 				<directory>/Users/sortona/Documents/KDR/Data/DBPedia/jena</directory> -->
<!-- 			</parameters> -->
<!-- 			<class>asu.edu.neg_rule_miner.sparql.relational.QueryRelationalDatabase</class> -->
<!-- 			<parameters> -->
<!-- 				<sparql_back_up> -->
<!-- 					<class>asu.edu.neg_rule_miner.sparql.jena.remote.QuerySparqlRemoteEndpoint</class> --> -->
<!-- 					<parameters> -->
<!-- 						<sparql_endpoint>http://localhost:8890/sparql</sparql_endpoint> -->
<!-- 					</parameters> -->
<!-- 				</sparql_back_up> -->
<!-- 			</parameters> -->
			<graph_iri>http://dbpedia.org</graph_iri>
<!-- 			<graph_iri>http://yago-knowledge.org</graph_iri> -->
<!-- 			<graph_iri>http://www.wikidata.org</graph_iri> -->
			<!-- prefix to be specified in the sparql query -->
			<relation_prefix>
				<prefix>
					<name>rdf</name>
					<uri>http://www.w3.org/1999/02/22-rdf-syntax-ns#</uri>
				</prefix>
				<prefix>
					<name>dbp</name>
					<uri>http://dbpedia.org/property/</uri>
				</prefix>
				<prefix>
					<name>dbo</name>
					<uri>http://dbpedia.org/ontology/</uri>
				</prefix>
				<prefix>
					<name>wd</name>
					<uri>http://www.wikidata.org/entity/</uri>
				</prefix>
				<prefix>
					<name>wdt</name> 
					<uri>http://www.wikidata.org/prop/direct/</uri>
				</prefix>
				<prefix>
					<name>p</name>
					<uri>http://www.wikidata.org/prop/</uri>
				</prefix>
			</relation_prefix>
			<!-- target relation prefix. Only relations starting with prefixes specified here will be induced in rules -->
			<relation_target_prefix>
				<prefix>http://dbpedia.org/ontology/</prefix>
<!-- 					<prefix>http://yago-knowledge.org/resource/</prefix> -->
<!-- 					<prefix>http://www.wikidata.org/prop/direct/</prefix> -->
			</relation_target_prefix>
			<!--  specify set of relations to not include in the rules generation -->
			<relation_to_avoid>
<!-- 				<relation>http://yago-knowledge.org/resource/hasGender</relation> -->
<!-- 					<relation>http://www.wikidata.org/prop/direct/P31</relation> -->
			</relation_to_avoid>
			<!-- specify here the relation to be used to retrieve the class of an entity -->
			<types>
				<type_prefix>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</type_prefix>
<!-- 					<type_prefix>http://www.wikidata.org/prop/direct/P31</type_prefix> -->
			</types>
<!-- 			<types> -->
<!--  			Not using this for now because the two entities are of the same types only if they match all of the types they have -->
<!-- 				<top_type>http://www.w3.org/2002/07/owl#Thing</top_type> -->
<!-- 			</types> -->
		</sparql>
	</naive>
</rule_miner>